{"ast":null,"code":"var _jsxFileName = \"/home/sagar/Desktop/DSA vislulisation/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport QuickSortVisualizer from './components/QuickSortVisualizer';\nimport SelectionSortVisualizer from './components/SelectionSortVisualizer';\nimport BubbleSortVisualizer from './components/BubbleSortVisualizer';\nimport InsertionSortVisualizer from './components/InsertionSortVisualizer';\n\n// Define theme for consistent styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  colors: {\n    primary: '#3498db',\n    secondary: '#2ecc71',\n    accent: '#e74c3c',\n    dark: '#2c3e50',\n    light: '#ecf0f1',\n    lightGray: '#f5f7fa',\n    text: '#34495e'\n  },\n  shadows: {\n    small: '0 2px 5px rgba(0, 0, 0, 0.1)',\n    medium: '0 5px 15px rgba(0, 0, 0, 0.1)',\n    large: '0 10px 25px rgba(0, 0, 0, 0.1)'\n  },\n  borderRadius: '8px',\n  transitions: {\n    default: '0.3s ease'\n  }\n};\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: ${props => props.theme.colors.lightGray};\n    color: ${props => props.theme.colors.text};\n    overflow-x: hidden;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.colors.lightGray};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.colors.primary};\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${props => props.theme.colors.dark};\n  }\n`;\n_c = GlobalStyle;\nconst AppContainer = styled.div`\n  max-width: 1920px; /* Optimized for 24-inch monitor */\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c2 = AppContainer;\nconst Header = styled.header`\n  background-color: ${props => props.theme.colors.dark};\n  color: white;\n  padding: 20px 30px;\n  border-radius: ${props => props.theme.borderRadius};\n  margin-bottom: 20px;\n  box-shadow: ${props => props.theme.shadows.medium};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c3 = Header;\nconst TitleContainer = styled.div`\n  flex: 1;\n`;\n_c4 = TitleContainer;\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 2.5rem;\n  font-weight: 700;\n  background: linear-gradient(45deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c5 = Title;\nconst Subtitle = styled.p`\n  margin: 10px 0 0;\n  font-size: 1.1rem;\n  opacity: 0.9;\n`;\n_c6 = Subtitle;\nconst AlgorithmSelector = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n_c7 = AlgorithmSelector;\nconst AlgorithmButton = styled.button`\n  padding: 12px 24px;\n  font-size: 1rem;\n  font-weight: 600;\n  border-radius: ${props => props.theme.borderRadius};\n  border: none;\n  background-color: ${props => props.active ? props.theme.colors.primary : 'white'};\n  color: ${props => props.active ? 'white' : props.theme.colors.text};\n  box-shadow: ${props => props.theme.shadows.small};\n  cursor: pointer;\n  transition: all ${props => props.theme.transitions.default};\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${props => props.theme.shadows.medium};\n    background-color: ${props => props.active ? props.theme.colors.primary : props.theme.colors.lightGray};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c8 = AlgorithmButton;\nconst InfoCard = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.shadows.small};\n  margin-bottom: 20px;\n`;\n_c9 = InfoCard;\nconst InfoTitle = styled.h3`\n  margin-top: 0;\n  color: ${props => props.theme.colors.primary};\n  font-weight: 600;\n`;\n_c10 = InfoTitle;\nconst InfoText = styled.p`\n  line-height: 1.6;\n`;\n_c11 = InfoText;\nconst Footer = styled.footer`\n  text-align: center;\n  margin-top: 40px;\n  padding: 20px;\n  color: ${props => props.theme.colors.text};\n  opacity: 0.7;\n  font-size: 0.9rem;\n`;\n\n// Define algorithm info type\n_c12 = Footer; // Define algorithms type\nconst App = () => {\n  _s();\n  const [algorithm, setAlgorithm] = useState('quicksort');\n  const algorithmInfo = {\n    quicksort: {\n      title: \"Quick Sort Algorithm\",\n      description: \"Quick Sort is a divide-and-conquer algorithm that works by selecting a 'pivot' element and partitioning the array around the pivot. It has an average time complexity of O(n log n) and is often faster in practice than other O(n log n) algorithms like Merge Sort.\",\n      timeComplexity: \"Best: O(n log n), Average: O(n log n), Worst: O(n²)\",\n      spaceComplexity: \"O(log n)\",\n      inventor: \"Tony Hoare in 1959\",\n      useCases: \"Quick Sort is widely used in programming languages' built-in sorting functions, like Arrays.sort() in Java and sort() in C++.\"\n    },\n    selectionsort: {\n      title: \"Selection Sort Algorithm\",\n      description: \"Selection Sort is a simple comparison-based sorting algorithm. It divides the input list into two parts: a sorted sublist and an unsorted sublist. It repeatedly finds the minimum element from the unsorted sublist and moves it to the end of the sorted sublist.\",\n      timeComplexity: \"Best: O(n²), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Selection Sort is useful for small data sets or when memory writes are expensive, as it makes the minimum number of swaps.\"\n    },\n    bubblesort: {\n      title: \"Bubble Sort Algorithm\",\n      description: \"Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.\",\n      timeComplexity: \"Best: O(n), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Bubble Sort is primarily used as an educational tool to introduce sorting algorithms. It's rarely used in production due to its inefficiency with large data sets.\"\n    },\n    insertionsort: {\n      title: \"Insertion Sort Algorithm\",\n      description: \"Insertion Sort builds the final sorted array one item at a time. It takes one element from the input data in each iteration and finds its correct position in the already sorted part of the array.\",\n      timeComplexity: \"Best: O(n), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Insertion Sort is efficient for small data sets and nearly-sorted arrays. It's often used as part of more complex algorithms like Timsort.\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(TitleContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Algorithm Visualizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"Interactive visualization of Data Structures and Algorithms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlgorithmSelector, {\n        children: [/*#__PURE__*/_jsxDEV(AlgorithmButton, {\n          active: algorithm === 'quicksort',\n          onClick: () => setAlgorithm('quicksort'),\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmButton, {\n          active: algorithm === 'selectionsort',\n          onClick: () => setAlgorithm('selectionsort'),\n          children: \"Selection Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmButton, {\n          active: algorithm === 'bubblesort',\n          onClick: () => setAlgorithm('bubblesort'),\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmButton, {\n          active: algorithm === 'insertionsort',\n          onClick: () => setAlgorithm('insertionsort'),\n          children: \"Insertion Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n          children: algorithmInfo[algorithm].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: algorithmInfo[algorithm].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Complexity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }, this), \" \", algorithmInfo[algorithm].timeComplexity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Space Complexity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this), \" \", algorithmInfo[algorithm].spaceComplexity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Invented by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }, this), \" \", algorithmInfo[algorithm].inventor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Use Cases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this), \" \", algorithmInfo[algorithm].useCases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), algorithm === 'quicksort' && /*#__PURE__*/_jsxDEV(QuickSortVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 39\n      }, this), algorithm === 'selectionsort' && /*#__PURE__*/_jsxDEV(SelectionSortVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 43\n      }, this), algorithm === 'bubblesort' && /*#__PURE__*/_jsxDEV(BubbleSortVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 40\n      }, this), algorithm === 'insertionsort' && /*#__PURE__*/_jsxDEV(InsertionSortVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" Algorithm Visualizer - An educational tool for learning sorting algorithms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iT5nrX+xvTGj/iyvXADEwJYXhXY=\");\n_c13 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"TitleContainer\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"Subtitle\");\n$RefreshReg$(_c7, \"AlgorithmSelector\");\n$RefreshReg$(_c8, \"AlgorithmButton\");\n$RefreshReg$(_c9, \"InfoCard\");\n$RefreshReg$(_c10, \"InfoTitle\");\n$RefreshReg$(_c11, \"InfoText\");\n$RefreshReg$(_c12, \"Footer\");\n$RefreshReg$(_c13, \"App\");","map":{"version":3,"names":["React","useState","styled","createGlobalStyle","ThemeProvider","QuickSortVisualizer","SelectionSortVisualizer","BubbleSortVisualizer","InsertionSortVisualizer","jsxDEV","_jsxDEV","theme","colors","primary","secondary","accent","dark","light","lightGray","text","shadows","small","medium","large","borderRadius","transitions","default","GlobalStyle","props","_c","AppContainer","div","_c2","Header","header","_c3","TitleContainer","_c4","Title","h1","_c5","Subtitle","p","_c6","AlgorithmSelector","_c7","AlgorithmButton","button","active","_c8","InfoCard","_c9","InfoTitle","h3","_c10","InfoText","_c11","Footer","footer","_c12","App","_s","algorithm","setAlgorithm","algorithmInfo","quicksort","title","description","timeComplexity","spaceComplexity","inventor","useCases","selectionsort","bubblesort","insertionsort","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","getFullYear","_c13","$RefreshReg$"],"sources":["/home/sagar/Desktop/DSA vislulisation/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport QuickSortVisualizer from './components/QuickSortVisualizer';\nimport SelectionSortVisualizer from './components/SelectionSortVisualizer';\nimport BubbleSortVisualizer from './components/BubbleSortVisualizer';\nimport InsertionSortVisualizer from './components/InsertionSortVisualizer';\n\n// Define theme for consistent styling\nconst theme = {\n  colors: {\n    primary: '#3498db',\n    secondary: '#2ecc71',\n    accent: '#e74c3c',\n    dark: '#2c3e50',\n    light: '#ecf0f1',\n    lightGray: '#f5f7fa',\n    text: '#34495e',\n  },\n  shadows: {\n    small: '0 2px 5px rgba(0, 0, 0, 0.1)',\n    medium: '0 5px 15px rgba(0, 0, 0, 0.1)',\n    large: '0 10px 25px rgba(0, 0, 0, 0.1)',\n  },\n  borderRadius: '8px',\n  transitions: {\n    default: '0.3s ease',\n  }\n};\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: ${props => props.theme.colors.lightGray};\n    color: ${props => props.theme.colors.text};\n    overflow-x: hidden;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.colors.lightGray};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.colors.primary};\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${props => props.theme.colors.dark};\n  }\n`;\n\nconst AppContainer = styled.div`\n  max-width: 1920px; /* Optimized for 24-inch monitor */\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  background-color: ${props => props.theme.colors.dark};\n  color: white;\n  padding: 20px 30px;\n  border-radius: ${props => props.theme.borderRadius};\n  margin-bottom: 20px;\n  box-shadow: ${props => props.theme.shadows.medium};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TitleContainer = styled.div`\n  flex: 1;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 2.5rem;\n  font-weight: 700;\n  background: linear-gradient(45deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst Subtitle = styled.p`\n  margin: 10px 0 0;\n  font-size: 1.1rem;\n  opacity: 0.9;\n`;\n\nconst AlgorithmSelector = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nconst AlgorithmButton = styled.button<{ active: boolean }>`\n  padding: 12px 24px;\n  font-size: 1rem;\n  font-weight: 600;\n  border-radius: ${props => props.theme.borderRadius};\n  border: none;\n  background-color: ${props => props.active ? props.theme.colors.primary : 'white'};\n  color: ${props => props.active ? 'white' : props.theme.colors.text};\n  box-shadow: ${props => props.theme.shadows.small};\n  cursor: pointer;\n  transition: all ${props => props.theme.transitions.default};\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${props => props.theme.shadows.medium};\n    background-color: ${props => props.active ? props.theme.colors.primary : props.theme.colors.lightGray};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst InfoCard = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.shadows.small};\n  margin-bottom: 20px;\n`;\n\nconst InfoTitle = styled.h3`\n  margin-top: 0;\n  color: ${props => props.theme.colors.primary};\n  font-weight: 600;\n`;\n\nconst InfoText = styled.p`\n  line-height: 1.6;\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  margin-top: 40px;\n  padding: 20px;\n  color: ${props => props.theme.colors.text};\n  opacity: 0.7;\n  font-size: 0.9rem;\n`;\n\n// Define algorithm info type\ninterface AlgorithmInfo {\n  title: string;\n  description: string;\n  timeComplexity: string;\n  spaceComplexity: string;\n  inventor: string;\n  useCases: string;\n}\n\n// Define algorithms type\ninterface Algorithms {\n  [key: string]: AlgorithmInfo;\n}\n\nconst App: React.FC = () => {\n  const [algorithm, setAlgorithm] = useState<string>('quicksort');\n\n  const algorithmInfo: Algorithms = {\n    quicksort: {\n      title: \"Quick Sort Algorithm\",\n      description: \"Quick Sort is a divide-and-conquer algorithm that works by selecting a 'pivot' element and partitioning the array around the pivot. It has an average time complexity of O(n log n) and is often faster in practice than other O(n log n) algorithms like Merge Sort.\",\n      timeComplexity: \"Best: O(n log n), Average: O(n log n), Worst: O(n²)\",\n      spaceComplexity: \"O(log n)\",\n      inventor: \"Tony Hoare in 1959\",\n      useCases: \"Quick Sort is widely used in programming languages' built-in sorting functions, like Arrays.sort() in Java and sort() in C++.\"\n    },\n    selectionsort: {\n      title: \"Selection Sort Algorithm\",\n      description: \"Selection Sort is a simple comparison-based sorting algorithm. It divides the input list into two parts: a sorted sublist and an unsorted sublist. It repeatedly finds the minimum element from the unsorted sublist and moves it to the end of the sorted sublist.\",\n      timeComplexity: \"Best: O(n²), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Selection Sort is useful for small data sets or when memory writes are expensive, as it makes the minimum number of swaps.\"\n    },\n    bubblesort: {\n      title: \"Bubble Sort Algorithm\",\n      description: \"Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.\",\n      timeComplexity: \"Best: O(n), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Bubble Sort is primarily used as an educational tool to introduce sorting algorithms. It's rarely used in production due to its inefficiency with large data sets.\"\n    },\n    insertionsort: {\n      title: \"Insertion Sort Algorithm\",\n      description: \"Insertion Sort builds the final sorted array one item at a time. It takes one element from the input data in each iteration and finds its correct position in the already sorted part of the array.\",\n      timeComplexity: \"Best: O(n), Average: O(n²), Worst: O(n²)\",\n      spaceComplexity: \"O(1)\",\n      inventor: \"Unknown, but has been in use since at least the 1950s\",\n      useCases: \"Insertion Sort is efficient for small data sets and nearly-sorted arrays. It's often used as part of more complex algorithms like Timsort.\"\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <AppContainer>\n        <Header>\n          <TitleContainer>\n            <Title>Algorithm Visualizer</Title>\n            <Subtitle>Interactive visualization of Data Structures and Algorithms</Subtitle>\n          </TitleContainer>\n        </Header>\n\n        <AlgorithmSelector>\n          <AlgorithmButton \n            active={algorithm === 'quicksort'} \n            onClick={() => setAlgorithm('quicksort')}\n          >\n            Quick Sort\n          </AlgorithmButton>\n          <AlgorithmButton \n            active={algorithm === 'selectionsort'} \n            onClick={() => setAlgorithm('selectionsort')}\n          >\n            Selection Sort\n          </AlgorithmButton>\n          <AlgorithmButton \n            active={algorithm === 'bubblesort'} \n            onClick={() => setAlgorithm('bubblesort')}\n          >\n            Bubble Sort\n          </AlgorithmButton>\n          <AlgorithmButton \n            active={algorithm === 'insertionsort'} \n            onClick={() => setAlgorithm('insertionsort')}\n          >\n            Insertion Sort\n          </AlgorithmButton>\n        </AlgorithmSelector>\n\n        <InfoCard>\n          <InfoTitle>{algorithmInfo[algorithm].title}</InfoTitle>\n          <InfoText>{algorithmInfo[algorithm].description}</InfoText>\n          <InfoText><strong>Time Complexity:</strong> {algorithmInfo[algorithm].timeComplexity}</InfoText>\n          <InfoText><strong>Space Complexity:</strong> {algorithmInfo[algorithm].spaceComplexity}</InfoText>\n          <InfoText><strong>Invented by:</strong> {algorithmInfo[algorithm].inventor}</InfoText>\n          <InfoText><strong>Use Cases:</strong> {algorithmInfo[algorithm].useCases}</InfoText>\n        </InfoCard>\n\n        {algorithm === 'quicksort' && <QuickSortVisualizer />}\n        {algorithm === 'selectionsort' && <SelectionSortVisualizer />}\n        {algorithm === 'bubblesort' && <BubbleSortVisualizer />}\n        {algorithm === 'insertionsort' && <InsertionSortVisualizer />}\n\n        <Footer>\n          &copy; {new Date().getFullYear()} Algorithm Visualizer - An educational tool for learning sorting algorithms\n        </Footer>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}